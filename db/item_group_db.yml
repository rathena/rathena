# This file is a part of rAthena.
#   Copyright(C) 2024 rAthena Development Team
#   https://rathena.org - https://github.com/rathena
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
###########################################################################
# Item Group Database
###########################################################################
#
# Item Group Settings
#
###########################################################################
# - Group                      Group name of the item.
#   SubGroups:
#     - SubGroup:              SubGroup number associated with the list of item. See doc/item_group.txt for more information.
#       Algorithm:             Type of algorithm associated with SubGroup. (Default: SharedPool)
#       List:                  List of item(s) for the SubGroup.
#        - Index               Unique number that can be used to add the same Item with different data in the list.
#          Item                AegisName of item that will be obtained from this item group.
#          Rate                Probability to get the item. (Default: 0)
#          Amount              Amount of item that will be obtained. (Default: 1)
#          Duration            Makes the item a rental item which will expire within the given amount in minutes. Not intended for use with stackable items. (Default: 0)
#          Announced           If player obtains this item it will be broadcasted to the server. (Default: false)
#          UniqueId            Makes the given item(s) have a Unique ID. (Default: UniqueId from item_db)
#          Stacked             Whether stackable items are given stacked or not. (Default: true)
#          Named               Inscribes the item with the obtainer's name. (Default: false)
#          Bound               Binds the obtained item. (Default: None)
#          RandomOptionGroup   Applies random options of this group to all equipable items (Default: None)
#          RefineMinimum       Applies at least this refine level to all equipable items (Default: 0)
#          RefineMaximum       Applies at most this refine level to all equipable items (Default: 0)
#          Clear               Whether the current datas should be removed. (Optional)
#       Clear                  Remove the given SubGroup. (Optional)
###########################################################################

Header:
  Type: ITEM_GROUP_DB
  Version: 4

Footer:
  Imports:
    - Path: db/pre-re/item_group_db.yml
      Mode: Prerenewal
    - Path: db/re/item_group_db.yml
      Mode: Renewal
    - Path: db/import/item_group_db.yml
